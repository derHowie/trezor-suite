name: "[Test] suite-native Android E2E"
on: [push, pull_request]
concurrency:
  # TODO: add branch as well
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # build_test_app:
  #   timeout-minutes: 90
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout project
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: "true"

  #     # - name: Get build hash
  #     #   id: get_build_hash
  #     #   run: echo "build_hash=${{hashFiles('suite-native/app/package.json')}}-${{hashFiles('suite-native/app/app.config.ts')}}" >> $GITHUB_OUTPUT

  #     # - name: Get build hash
  #     #   run: echo "${{steps.get_build_hash.outputs.build_hash}}"

  #     # TODO: move this to a custom action
  #     - name: Install node and yarn
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version-file: ".nvmrc"
  #         cache: yarn

  #     - name: Cache node modules
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: node_modules-${{hashFiles('yarn.lock')}}
  #         restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock

  #     - name: Install Yarn dependencies
  #       run: yarn install && yarn build:libs

  #     - name: Setup Java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: temurin
  #         java-version: 17

  #     - name: Prebuild native expo project
  #       working-directory: ./suite-native/app
  #       run: yarn prebuild --platform android --clean

  #     - name: Detox build
  #       run: yarn build:e2e android.emu.release
  #       working-directory: ./suite-native/app

  #     - name: Save build to cache
  #       uses: actions/cache/save@v4
  #       with:
  #         path: |
  #           suite-native/app/android/app/build/
  #         key: android_test_build

  run_android_e2e_tests:
    runs-on: ubuntu-latest
    # needs: build_test_app
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: check Vars
        run: echo $ENVIRONMENT_EXPO

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # Combination of android emulator and trezor-user-env is using a too much disk space
          # for a free tier GH action runner, so some preinstalled packages has to be removed.
          dotnet: true
          haskell: true

          tool-cache: false
          android: false
          swap-storage: false
          large-packages: false

      - name: Install node and yarn
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: yarn
      - name: Checkout project
        run: df -h

      - name: Load node modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{hashFiles('yarn.lock')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - name: Checkout project
        run: df -h

      - name: Get device name from detox config file
        id: device
        run: node -e "console.log('AVD_NAME=' + require('./suite-native/app/.detoxrc').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT
      - name: Checkout project
        run: df -h

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Checkout project
        run: df -h

      - name: Run trezor-user-env
        env:
          COMPOSE_FILE: ./docker/docker-compose.suite-native-ci.yml
        run: |
          docker compose pull trezor-user-env-unix
          docker compose up -d --wait trezor-user-env-unix
      - name: install WSCAT
        run: npm install -g wscat

      - name: connect to websocket
        run: wscat -c localhost:9001

      - name: read build from cache
        uses: actions/cache/restore@v4
        with:
          path: |
            suite-native/app/android/app/build/
          key: android_test_build

      - name: Checkout project
        run: df -h

      - name: Run Detox E2E Android tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          profile: pixel_3a
          arch: x86_64
          working-directory: suite-native/app
          ram-size: 4096M
          disk-size: 1024M
          sdcard-path-or-size: 124M
          force-avd-creation: true
          avd-name: ${{ steps.device.outputs.AVD_NAME }}
          pre-emulator-launch-script: adb reverse tcp:21325 tcp:21325
          script: yarn test:e2e android.emu.release --headless --retries 3 --take-screenshots failing

      - name: "Store failed test screenshot artifacts"
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: failed-android-tests-screenshots
          path: suite-native/app/artifacts
